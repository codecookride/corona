{"version":3,"sources":["countries.js","states.js","idaho.js","massachusetts.js","california.js","hawaii.js","stateoverview.js","montana.js","App.js","serviceWorker.js","index.js"],"names":["Countries","useState","countryStats","setCountryStats","useEffect","axios","then","response","console","log","data","catch","error","className","map","item","country","cases","total","deaths","recovered","new","States","stateStats","setstateStats","stateCaseStats","setstateCaseStats","usa_deaths","usa_cases_by_state","key","state_name","death_cases","cases_number","Idaho","Massachusetts","California","Hawaii","StateOverview","myData","concat","sort","a","b","death","state","positive","totalTestResults","Montanna","App","to","exact","path","component","Montana","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.080744cb.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Countries() {\r\n\r\n     const [countryStats, setCountryStats] = useState([]);\r\n \r\n     \r\n   useEffect(() => {\r\n     \r\n \r\n \r\n    axios({\r\n      \"method\":\"GET\",\r\n      \"url\":\"https://covid-193.p.rapidapi.com/statistics\",\r\n      \"headers\":{\r\n      \"content-type\":\"application/octet-stream\",\r\n      \"x-rapidapi-host\":\"covid-193.p.rapidapi.com\",\r\n      \"x-rapidapi-key\":\"c0dba4d6a3msh6c39589aa21d903p1b6ce4jsn8b41b9308353\"\r\n      }\r\n      })\r\n         .then((response)=>{\r\n           console.log(response.data.response)\r\n            setCountryStats(response.data.response)\r\n         })\r\n         .catch((error)=>{\r\n           console.log(error)\r\n         })\r\n     }, []);\r\n \r\n   return (\r\n     <>\r\n     <h1>Stats by Country</h1>\r\n     <div className= \"chartTop\">\r\n         <h2 className=\"chartOne\">country</h2>\r\n         <h2 className=\"chartOne\">Total cases</h2>\r\n         <h2 className=\"chartOne\">total deaths</h2>\r\n         <h2 className=\"chartOne\"> Recovered</h2>\r\n         <h2 className=\"chartOne\"> New deaths</h2>\r\n         <h2 className=\"chartOne\"> New cases</h2>\r\n         </div>\r\n     <div className= \"section\">\r\n\r\n      \r\n       \r\n       \r\n       {countryStats.map(item => {\r\n    \r\n           return(\r\n             \r\n             <div className= \"card\" >\r\n           <h2 className=\"chart\">{item.country}</h2>\r\n           <h3 className =\"chart\">{item.cases.total} </h3>\r\n           \r\n           <h3 className =\"chart\"><span>{item.deaths.total}</span></h3>\r\n           \r\n           <h3 className =\"chart\">{item.cases.recovered}</h3>\r\n           <h3 className =\"chart\">{item.deaths.new}</h3>\r\n           <h3 className =\"chart\">{item.cases.new}</h3>\r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </div>\r\n     </>\r\n   );\r\n }\r\n \r\n export default Countries;\r\n ","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction States() {\r\n\r\n     const [stateStats, setstateStats] = useState([{}]);\r\n     const [stateCaseStats, setstateCaseStats] = useState([{}]);\r\n \r\n     \r\n   useEffect(() => {\r\n     \r\n \r\n \r\n    axios({\r\n        \"method\":\"GET\",\r\n        \"url\":\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/johns_hopkins_united_states_latest.php\",\r\n        \"headers\":{\r\n        \"content-type\":\"application/octet-stream\",\r\n        \"x-rapidapi-host\":\"coronavirus-monitor.p.rapidapi.com\",\r\n        \"x-rapidapi-key\":\"c0dba4d6a3msh6c39589aa21d903p1b6ce4jsn8b41b9308353\"\r\n        },\"params\":{\r\n        \"state\":\"oregon\"\r\n        }\r\n        })\r\n         .then((response)=>{\r\n           console.log(\"states\",response.data)\r\n            setstateStats(response.data.usa_deaths)\r\n            setstateCaseStats(response.data.usa_cases_by_state)\r\n         })\r\n         .catch((error)=>{\r\n           console.log(error)\r\n         })\r\n     }, []);\r\n \r\n   return (\r\n     <>\r\n     <h1>Deaths in Oregon</h1>\r\n     <section>\r\n       \r\n       {stateStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total deaths: <span>{item.death_cases}</span></h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     <h1>Cases in Oregon</h1>\r\n     <section>\r\n       \r\n       {stateCaseStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total cases: {item.cases_number}</h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     </>\r\n   );\r\n }\r\n \r\n export default States;\r\n ","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Idaho() {\r\n\r\n     const [stateStats, setstateStats] = useState([{}]);\r\n     const [stateCaseStats, setstateCaseStats] = useState([{}]);\r\n \r\n     \r\n   useEffect(() => {\r\n     \r\n \r\n \r\n    axios({\r\n        \"method\":\"GET\",\r\n        \"url\":\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/johns_hopkins_united_states_latest.php\",\r\n        \"headers\":{\r\n        \"content-type\":\"application/octet-stream\",\r\n        \"x-rapidapi-host\":\"coronavirus-monitor.p.rapidapi.com\",\r\n        \"x-rapidapi-key\":\"c0dba4d6a3msh6c39589aa21d903p1b6ce4jsn8b41b9308353\"\r\n        },\"params\":{\r\n        \"state\":\"Idaho\"\r\n        }\r\n        })\r\n         .then((response)=>{\r\n           console.log(\"states\",response.data)\r\n            setstateStats(response.data.usa_deaths)\r\n            setstateCaseStats(response.data.usa_cases_by_state)\r\n         })\r\n         .catch((error)=>{\r\n           console.log(error)\r\n         })\r\n     }, []);\r\n \r\n   return (\r\n     <>\r\n     <h1>Deaths in Idaho</h1>\r\n     <section>\r\n       \r\n       {stateStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total deaths: <span>{item.death_cases}</span></h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     <h1>Cases in Idaho</h1>\r\n     <section>\r\n       \r\n       {stateCaseStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total cases: {item.cases_number}</h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     </>\r\n   );\r\n }\r\n \r\n export default Idaho;\r\n ","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Massachusetts() {\r\n\r\n     const [stateStats, setstateStats] = useState([{}]);\r\n     const [stateCaseStats, setstateCaseStats] = useState([{}]);\r\n \r\n     \r\n   useEffect(() => {\r\n     \r\n \r\n \r\n    axios({\r\n        \"method\":\"GET\",\r\n        \"url\":\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/johns_hopkins_united_states_latest.php\",\r\n        \"headers\":{\r\n        \"content-type\":\"application/octet-stream\",\r\n        \"x-rapidapi-host\":\"coronavirus-monitor.p.rapidapi.com\",\r\n        \"x-rapidapi-key\":\"c0dba4d6a3msh6c39589aa21d903p1b6ce4jsn8b41b9308353\"\r\n        },\"params\":{\r\n        \"state\":\"massachusetts\"\r\n        }\r\n        })\r\n         .then((response)=>{\r\n           console.log(\"states\",response.data)\r\n            setstateStats(response.data.usa_deaths)\r\n            setstateCaseStats(response.data.usa_cases_by_state)\r\n         })\r\n         .catch((error)=>{\r\n           console.log(error)\r\n         })\r\n     }, []);\r\n \r\n   return (\r\n     <>\r\n     <h1>Deaths in massachusetts</h1>\r\n     <section>\r\n       \r\n       {stateStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total deaths: <span>{item.death_cases}</span></h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     <h1>Cases in massachusetts</h1>\r\n     <section>\r\n       \r\n       {stateCaseStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total cases: {item.cases_number}</h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     </>\r\n   );\r\n }\r\n \r\n export default Massachusetts;\r\n ","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction California() {\r\n\r\n     const [stateStats, setstateStats] = useState([{}]);\r\n     const [stateCaseStats, setstateCaseStats] = useState([{}]);\r\n \r\n     \r\n   useEffect(() => {\r\n     \r\n \r\n \r\n    axios({\r\n        \"method\":\"GET\",\r\n        \"url\":\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/johns_hopkins_united_states_latest.php\",\r\n        \"headers\":{\r\n        \"content-type\":\"application/octet-stream\",\r\n        \"x-rapidapi-host\":\"coronavirus-monitor.p.rapidapi.com\",\r\n        \"x-rapidapi-key\":\"c0dba4d6a3msh6c39589aa21d903p1b6ce4jsn8b41b9308353\"\r\n        },\"params\":{\r\n        \"state\":\"california\"\r\n        }\r\n        })\r\n         .then((response)=>{\r\n           console.log(\"states\",response.data)\r\n            setstateStats(response.data.usa_deaths)\r\n            setstateCaseStats(response.data.usa_cases_by_state)\r\n         })\r\n         .catch((error)=>{\r\n           console.log(error)\r\n         })\r\n     }, []);\r\n \r\n   return (\r\n     <>\r\n     <h1>Deaths in California</h1>\r\n     <section>\r\n       \r\n       {stateStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total deaths: <span>{item.death_cases}</span></h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     <h1>Cases in California</h1>\r\n     <section>\r\n       \r\n       {stateCaseStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total cases: {item.cases_number}</h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     </>\r\n   );\r\n }\r\n \r\n export default California;\r\n ","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Hawaii() {\r\n\r\n     const [stateStats, setstateStats] = useState([{}]);\r\n     const [stateCaseStats, setstateCaseStats] = useState([{}]);\r\n \r\n     \r\n   useEffect(() => {\r\n     \r\n \r\n \r\n    axios({\r\n        \"method\":\"GET\",\r\n        \"url\":\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/johns_hopkins_united_states_latest.php\",\r\n        \"headers\":{\r\n        \"content-type\":\"application/octet-stream\",\r\n        \"x-rapidapi-host\":\"coronavirus-monitor.p.rapidapi.com\",\r\n        \"x-rapidapi-key\":\"c0dba4d6a3msh6c39589aa21d903p1b6ce4jsn8b41b9308353\"\r\n        },\"params\":{\r\n        \"state\":\"hawaii\"\r\n        }\r\n        })\r\n         .then((response)=>{\r\n           console.log(\"states\",response.data)\r\n            setstateStats(response.data.usa_deaths)\r\n            setstateCaseStats(response.data.usa_cases_by_state)\r\n         })\r\n         .catch((error)=>{\r\n           console.log(error)\r\n         })\r\n     }, []);\r\n \r\n   return (\r\n     <>\r\n     <h1>Deaths in hawaii</h1>\r\n     <section>\r\n       \r\n       {stateStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total deaths: <span>{item.death_cases}</span></h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     <h1>Cases in hawaii</h1>\r\n     <section>\r\n       \r\n       {stateCaseStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total cases: {item.cases_number}</h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     </>\r\n   );\r\n }\r\n \r\n export default Hawaii;\r\n ","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nfunction StateOverview() {\r\n\r\n      const [stateStats, setstateStats] = useState([{}]);\r\n    //  const [stateCaseStats, setstateCaseStats] = useState([{}]);\r\n \r\n    //  const myData = [].concat(stateStats)\r\n   useEffect(() => {\r\n     \r\n    \r\n \r\n    axios({\r\n        \"method\":\"GET\",\r\n        \"url\":\"https://covidtracking.com/api/states\",\r\n      \r\n        })\r\n         .then((response)=>{\r\n           console.log(\"states\",response)\r\n           const myData = [].concat(response.data)\r\n             setstateStats(myData.sort((a, b) =>{\r\n                 return b.death - a.death}))\r\n            // setstateCaseStats(response.data.usa_cases_by_state)\r\n         })\r\n         .catch((error)=>{\r\n           console.log(error)\r\n         })\r\n     }, []);\r\n \r\n   return (\r\n     <>\r\n\r\n\r\n     <h1>All States</h1>\r\n     <section className='section'>\r\n       \r\n\r\n        \r\n        {stateStats.map(item => {\r\n           return( \r\n             <div className=\"statediv\" key= {item.state}>\r\n               \r\n           <h2>{item.state}</h2>\r\n           <h4>Cases: {item.positive}</h4>\r\n           <h4>Total deaths: <span>{item.death}</span></h4>\r\n           <h4>Total test:{item.totalTestResults}</h4>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n    \r\n     </>\r\n   );\r\n }\r\n \r\n export default StateOverview;\r\n ","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Montanna() {\r\n\r\n     const [stateStats, setstateStats] = useState([{}]);\r\n     const [stateCaseStats, setstateCaseStats] = useState([{}]);\r\n \r\n     \r\n   useEffect(() => {\r\n     \r\n \r\n \r\n    axios({\r\n        \"method\":\"GET\",\r\n        \"url\":\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/johns_hopkins_united_states_latest.php\",\r\n        \"headers\":{\r\n        \"content-type\":\"application/octet-stream\",\r\n        \"x-rapidapi-host\":\"coronavirus-monitor.p.rapidapi.com\",\r\n        \"x-rapidapi-key\":\"c0dba4d6a3msh6c39589aa21d903p1b6ce4jsn8b41b9308353\"\r\n        },\"params\":{\r\n        \"state\":\"montana\"\r\n        }\r\n        })\r\n         .then((response)=>{\r\n           console.log(\"states\",response.data)\r\n            setstateStats(response.data.usa_deaths)\r\n            setstateCaseStats(response.data.usa_cases_by_state)\r\n         })\r\n         .catch((error)=>{\r\n           console.log(error)\r\n         })\r\n     }, []);\r\n \r\n   return (\r\n     <>\r\n     <h1>Deaths in Montana</h1>\r\n     <section>\r\n       \r\n       {stateStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total deaths: <span>{item.death_cases}</span></h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     <h1>Cases in Montana</h1>\r\n     <section>\r\n       \r\n       {stateCaseStats.map(item => {\r\n           return( \r\n             <div className=\"smalldiv\" key= {item.state_name}>\r\n               \r\n           <h2>{item.state_name}</h2>\r\n           <h3>Total cases: {item.cases_number}</h3>\r\n         \r\n           \r\n           </div>\r\n           \r\n             )\r\n             \r\n         })}\r\n     </section>\r\n     </>\r\n   );\r\n }\r\n \r\n export default Montanna;\r\n ","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Route, Link} from 'react-router-dom';\nimport './App.css';\nimport Countries from \"./countries\"\nimport States from \"./states\"\nimport Idaho from \"./idaho\"\nimport Massachusetts from \"./massachusetts\"\nimport California from \"./california\"\nimport Hawaii from \"./hawaii\"\nimport StateOverview from \"./stateoverview\"\nimport Montana from \"./montana\"\nimport Home from \"./home\"\n\nfunction App() {\n\n  return(\n<div>\n  <nav>\n  \n  {/* <Link to=\"/oregon\">Oregon</Link>\n  <Link to=\"/idaho\">Idaho</Link>\n  <Link to=\"/california\">Cali</Link>\n  <Link to=\"/massachusetts\">Mass</Link>\n  <Link to=\"/hawaii\">Hawaii</Link>\n  <Link to=\"/montana\">Montana</Link> */}\n  <Link to=\"/countries\">World</Link>\n  <Link to=\"/stateoverview\">States</Link>\n\n  \n  </nav>\n  <Route exact path =\"/\" component= {Countries}/>\n  <Route path = '/countries' component = {Countries}/>\n  <Route  path = '/oregon' component = {States}/>\n  <Route  path = '/idaho' component = {Idaho}/>\n  <Route  path = '/massachusetts' component = {Massachusetts}/>\n  <Route  path = '/california' component = {California}/>\n  <Route  path = '/hawaii' component = {Hawaii}/>\n  <Route  path = '/montana' component = {Montana}/>\n  <Route  path = '/stateoverview' component = {StateOverview}/>\n  </div>\n  )\n}\n\nexport default App;\n\n\n// country_name: \"China\"\n// cases: \"81,285\"\n// deaths: \"3,287\"\n// region: \"\"\n// total_recovered: \"74,051\"\n// new_deaths: \"6\"\n// new_cases: \"67\"\n// serious_critical: \"1,235\"\n// active_cases: \"3,947\"\n// total_cases_per_1m_population: \"56\"","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}